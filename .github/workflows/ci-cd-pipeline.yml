name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch
  pull_request:  # Trigger the workflow on pull requests
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test  # Assuming you're using Jest or another test framework

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test  # Run this job only after the "test" job is successful
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log In to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t your-image-name:latest .
          docker tag your-image-name:latest your-dockerhub-username/your-image-name:latest

      - name: Push Docker Image
        run: |
          docker push your-dockerhub-username/your-image-name:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build  # Run this job only after the "build" job is successful
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Cluster
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl rollout status deployment/your-deployment-name
